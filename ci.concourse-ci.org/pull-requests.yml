---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: concourse
  type: git
  source:
    uri: https://github.com/concourse/concourse

- name: fly
  type: pull-request
  source:
    repo: concourse/fly
    access_token: ((pull_requests_access_token))
    every: true

- name: atc
  type: pull-request
  source:
    repo: concourse/atc
    access_token: ((pull_requests_access_token))
    every: true

- name: worker
  type: pull-request
  source:
    repo: concourse/worker
    access_token: ((pull_requests_access_token))
    every: true

- name: go-concourse
  type: pull-request
  source:
    repo: concourse/go-concourse
    access_token: ((pull_requests_access_token))
    every: true

jobs:
- name: fly
  public: true
  plan:
  - aggregate:
    - get: fly-pr
      resource: fly
      trigger: true
      version: every
    - get: concourse
  - put: fly
    params: {path: fly-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: fly/ci/pr.yml
    tags: [pr]
    on_failure:
      put: fly
      params: {path: fly-pr, status: failure}
    on_success:
      put: fly
      params: {path: fly-pr, status: success}

- name: atc
  public: true
  plan:
  - aggregate:
    - get: atc-pr
      resource: atc
      trigger: true
      version: every
    - get: concourse
  - put: atc
    params: {path: atc-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: atc/ci/pr.yml
    tags: [pr]
    on_failure:
      put: atc
      params: {path: atc-pr, status: failure}
    on_success:
      put: atc
      params: {path: atc-pr, status: success}

- name: go-concourse
  public: true
  plan:
  - aggregate:
    - get: go-concourse-pr
      resource: go-concourse
      trigger: true
      version: every
    - get: concourse
  - put: go-concourse
    params: {path: go-concourse-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: go-concourse/ci/pr.yml
    tags: [pr]
    on_failure:
      put: go-concourse
      params: {path: go-concourse-pr, status: failure}
    on_success:
      put: go-concourse
      params: {path: go-concourse-pr, status: success}

- name: worker
  public: true
  plan:
  - aggregate:
    - get: worker-pr
      resource: worker
      trigger: true
      version: every
    - get: concourse
  - put: worker
    params: {path: worker-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: worker/ci/pr.yml
    tags: [pr]
    on_failure:
      put: worker
      params: {path: worker-pr, status: failure}
    on_success:
      put: worker
      params: {path: worker-pr, status: success}
