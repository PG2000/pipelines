---
resource_types:
- name: bosh-deployment
  type: registry-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: pull-request
  type: registry-image
  source:
    repository: jtarchie/pr

resources:
- name: concourse
  type: git
  source:
    uri: https://github.com/concourse/concourse

- name: concourse-bosh-deployment
  type: git
  source:
    uri: git@github.com:concourse/concourse-bosh-deployment.git
    branch: develop
    private_key: ((concourse_deployment_repo_private_key))

- name: gcp-xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent

- name: fly
  type: pull-request
  source:
    repo: concourse/fly
    access_token: ((pull_requests_access_token))
    every: true

- name: atc
  type: pull-request
  source:
    repo: concourse/atc
    access_token: ((pull_requests_access_token))
    every: true

- name: worker
  type: pull-request
  source:
    repo: concourse/worker
    access_token: ((pull_requests_access_token))
    every: true

- name: go-concourse
  type: pull-request
  source:
    repo: concourse/go-concourse
    access_token: ((pull_requests_access_token))
    every: true

- name: web
  type: pull-request
  source:
    repo: concourse/web
    base: master
    access_token: ((pull_requests_access_token))
    every: true

- name: garden-runc
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: postgres-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release

- name: web-pr-bosh-deployment
  type: bosh-deployment
  source:
    target: ((bosh_target))
    deployment: concourse-web-pr
    client: ((bosh_client.id))
    client_secret: ((bosh_client.secret))

jobs:
- name: fly
  public: true
  plan:
  - aggregate:
    - get: fly-pr
      resource: fly
      trigger: true
      version: every
    - get: concourse
  - put: fly
    params: {path: fly-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: fly/ci/pr.yml
    tags: [pr]
    on_failure:
      put: fly
      params: {path: fly-pr, status: failure}
    on_success:
      put: fly
      params: {path: fly-pr, status: success}

- name: atc
  public: true
  plan:
  - aggregate:
    - get: atc-pr
      resource: atc
      trigger: true
      version: every
    - get: concourse
  - put: atc
    params: {path: atc-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: atc/ci/pr.yml
    tags: [pr]
    on_failure:
      put: atc
      params: {path: atc-pr, status: failure}
    on_success:
      put: atc
      params: {path: atc-pr, status: success}

- name: go-concourse
  public: true
  plan:
  - aggregate:
    - get: go-concourse-pr
      resource: go-concourse
      trigger: true
      version: every
    - get: concourse
  - put: go-concourse
    params: {path: go-concourse-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: go-concourse/ci/pr.yml
    tags: [pr]
    on_failure:
      put: go-concourse
      params: {path: go-concourse-pr, status: failure}
    on_success:
      put: go-concourse
      params: {path: go-concourse-pr, status: success}

- name: worker
  public: true
  plan:
  - aggregate:
    - get: worker-pr
      resource: worker
      trigger: true
      version: every
    - get: concourse
  - put: worker
    params: {path: worker-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: unit
    file: worker/ci/pr.yml
    tags: [pr]
    on_failure:
      put: worker
      params: {path: worker-pr, status: failure}
    on_success:
      put: worker
      params: {path: worker-pr, status: success}

- name: web
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
    - get: web-pr
      resource: web
      trigger: true
      version: every
    - get: garden-runc
    - get: postgres-release
    - get: gcp-xenial-stemcell
    - get: concourse-bosh-deployment
  - put: delete-web-pr-deployment
    resource: web-pr-bosh-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      delete:
        enabled: true
        force: true
  - put: web
    params: {path: web-pr, status: pending}
    get_params: {fetch_merge: true}
  - task: bosh-dev
    file: concourse/ci/web-pr.yml
  - put: web-pr-bosh-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      stemcells: [gcp-xenial-stemcell/*.tgz]
      releases:
      - garden-runc/*.tgz
      - postgres-release/*.tgz
      - bosh-dev/concourse-*.tgz
      ops_files:
      - concourse-bosh-deployment/cluster/operations/dev-versions.yml
      - concourse-bosh-deployment/cluster/operations/add-local-users.yml
      - concourse-bosh-deployment/cluster/operations/static-web.yml
      vars:
        deployment_name: concourse-web-pr
        web_ip: 10.244.18.2
        external_url: "http://10.244.18.2:8080"
        network_name: testflight
        web_vm_type: testflight
        db_vm_type: testflight
        worker_vm_type: testflight
        db_persistent_disk_type: small
        main_team_local_users:
        - test
        - test1
        - test2
        - test3
        - test4
        - test5
        - test6
        - test7
        - test8
        - test9
        - test10
        add_local_users:
        - 'test:$2a$10$iEnPPyINsvif.wytAMgf7.HcForfasqXbbHyNsR5knEcRhjuR4MEW' # wats
        - 'test1:$2a$10$T8jiznbmBp/kMdrZoRdkDekl9i8YWq0g.iRPndu.oVW.EhNvdPO7e' # bosh-testflight
        - 'test2:$2a$10$w9ijd0MV6b3LjPlRNlZN/.dYan8aITbJU9Wb1fH0Z8.qgqnEGHEmq' # wats
        - 'test3:$2a$10$NCcOzRYaJ3zPVWlV/3miauG0H9PRDZGf1yTFb2mlD6izNydfU.oQu' # wats
        - 'test4:$2a$10$ewU0vIPw.NUJEn32oOkg9uKKjox3Bhwug4vxsAVUB/qRdH6Y4Jar.' # wats
        - 'test5:$2a$10$rfeK1hiPYeA9IXQIX9kTyuUuqquUbGUf3JM8Iv9gJe8syzRbB7VHC' # wats
        - 'test6:$2a$10$KJ5E79USADjtVfuOfyVdYOAOsSDIRHh0LPMrOH/n6c7Cn4bdm2u1i' # wats
        - 'test7:$2a$10$QqcyRbAU9e5KWZoo3uokkOIEv4HY5/1FzKBDTSRkJEG2rnYNgcKey' # wats
        - 'test8:$2a$10$OSIDOF4gmAgnAgeXnxndt.MBoHhQBtMwkOWJYIGcQWnm7L8kSm1Na' # wats
        - 'test9:$2a$10$pZ1wk2teShR6bkpAME7Kie0L0e7TrXMzPQvf4W3bIZTRciNRXdnue' # watsjs
        - 'test10:$2a$10$wJlVFxWDkcOgnb8tH2NhjeJQKaUiEHFqLY1FT3uC5s5CFh55ZaIcO' # bosh-lengthy-output
  - task: wats
    file: concourse/ci/wats.yml
    params:
      ATC_URL: "http://10.244.18.2:8080"
    timeout: 1h
    on_failure:
      put: web
      params: {path: web-pr, status: failure}
    on_success:
      put: web
      params: {path: web-pr, status: success}
