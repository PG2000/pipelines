groups:
- name: develop
  jobs:
  - atc
  - blackbox
  - fly
  - go-concourse
  - baggageclaim
  - skymarshal
  - web
  - tsa
  - rc
  - build-fly
  - bin-rc
  - bosh-lengthy-output
  - bosh-rc
  - bosh-test-deploy
  - bosh-testflight
  - bosh-wats
  - bosh-watsjs
  - bosh-upgrade
  - bosh-downgrade
  - bin-testflight
  - bin-testflight-qs
  - bin-smoke
  - bin-docker
  - bin-docker-testflight
  - bin-docker-testflight-qs
  - topgun
  - bosh-deploy

- name: publish
  jobs:
  - nightly
  - major
  - minor
  - patch
  - shipit
  - github-release
  - push-docs
  - promote-docker
  - bump-concourse-bosh-deployment

- name: workers
  jobs:
  - install-go-windows

- name: dependencies
  jobs:
  - bump-btrfs
  - bump-golang

jobs:
- name: fly
  public: true
  plan:
  - get: concourse
    trigger: true
  - aggregate:
    - task: linux
      file: concourse/ci/fly-linux.yml
    - task: darwin
      file: concourse/ci/fly-darwin.yml
    - task: windows
      file: concourse/ci/fly-windows.yml

- name: go-concourse
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: go-unit
    file: concourse/ci/go-concourse.yml

- name: atc
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - aggregate:
    - task: check-bindata
      file: concourse/ci/check-bindata.yml
      params:
        REPO: atc
    - task: go-unit
      file: concourse/ci/atc-go.yml
      privileged: true

- name: baggageclaim
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    privileged: true
    file: concourse/ci/baggageclaim.yml

- name: skymarshal
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/skymarshal.yml

- name: web
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - aggregate:
    - task: check-bindata
      file: concourse/ci/check-bindata.yml
      params:
        REPO: web
    - task: build
      file: concourse/ci/web.yml
    - task: elm-unit
      file: concourse/ci/atc-elm.yml

- name: blackbox
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/blackbox.yml

- name: tsa
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/tsa.yml

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/version}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/version}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: version
    params: {file: version/version}

- name: rc
  public: true
  serial_groups: [version]
  plan:
  - get: concourse
    trigger: true
    passed: [atc, fly, go-concourse, blackbox, tsa, baggageclaim, skymarshal, web]
  - get: garden-runc
  - get: version
    params: {pre: rc}
  - put: version
    params: {file: version/version}

- name: build-fly
  public: true
  plan:
  - get: concourse
    trigger: true
    passed: [rc]
  - get: version
    trigger: true
    passed: [rc]
  - get: final-version
    resource: version
    passed: [rc]
    params: {bump: final}
    trigger: true
  - get: garden-runc
    trigger: true
    passed: [rc]
  - aggregate:
    - task: build-linux
      file: concourse/ci/fly-build-linux.yml
    - task: build-darwin
      file: concourse/ci/fly-build-darwin.yml
    - task: build-windows
      file: concourse/ci/fly-build-windows.yml
  - task: build-release
    file: concourse/src/github.com/concourse/fly/ci/build-release.yml
  - put: fly-rc
    params:
      name: release/name
      tag: release/tag
      body: release/body
      globs: [release/artifacts/*]

- name: bosh-rc
  public: true
  plan:
  - aggregate:
    - get: concourse
      trigger: true
      passed: [build-fly]
    - get: garden-runc
      trigger: true
      passed: [build-fly]
    - get: version
      trigger: true
      passed: [build-fly]
    - get: final-version
      trigger: true
      resource: version
      passed: [build-fly]
      params: {bump: final}
    - get: fly-rc
      trigger: true
      passed: [build-fly]
      params:
        globs: [fly_*]
    - get: postgres-release
      trigger: true
    - get: gcp-stemcell
      trigger: true
    - get: concourse-bosh-deployment
      trigger: true
  - task: create-bosh-rc
    file: concourse/ci/create-bosh-rc.yml
  - put: bosh-rc
    params: {file: bosh-rc/concourse-*.tgz}

- name: bin-rc
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [build-fly]
      trigger: true
    - get: version
      passed: [build-fly]
      trigger: true
    - get: final-version
      resource: version
      passed: [build-fly]
      params: {bump: final}
      trigger: true
    - get: garden-runc
      passed: [build-fly]
      trigger: true
    - get: fly-rc
      trigger: true
      passed: [build-fly]
      params:
        globs: [fly_*]
    - get: garden-runc-src
  - task: checkout-release-tag
    file: concourse/ci/checkout-garden-runc.yml
  - aggregate:
    - task: build-linux
      file: concourse/src/github.com/concourse/bin/ci/build-linux.yml
      output_mapping: {binary: linux-binary}
    - task: build-darwin
      file: concourse/src/github.com/concourse/bin/ci/build-darwin.yml
      output_mapping: {binary: darwin-binary}
    - task: build-windows
      file: concourse/src/github.com/concourse/bin/ci/build-windows.yml
      output_mapping: {binary: windows-binary}
  - task: build-release
    file: concourse/src/github.com/concourse/bin/ci/build-release.yml
  - put: bin-rc
    params:
      name: release/name
      tag: release/tag
      body: release/body
      globs: [release/artifacts/*]

- name: bosh-test-deploy
  public: true
  serial_groups: [bosh-wats, bosh-watsjs, bosh-testflight]
  plan:
  - aggregate:
    - get: concourse
      trigger: true
      passed: [bosh-rc]
    - get: bosh-rc
      trigger: true
      passed: [bosh-rc]
    - get: version
      trigger: true
      passed: [bosh-rc]
    - get: garden-runc
      trigger: true
      passed: [bosh-rc]
    - get: fly-rc
      trigger: true
      passed: [bosh-rc]
    - get: postgres-release
      trigger: true
      passed: [bosh-rc]
    - get: gcp-stemcell
      trigger: true
      passed: [bosh-rc]
    - get: concourse-bosh-deployment
      passed: [bosh-rc]
      trigger: true
  - put: test-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      stemcells: [gcp-stemcell/*.tgz]
      releases:
      - garden-runc/*.tgz
      - postgres-release/*.tgz
      - bosh-rc/concourse-*.tgz
      ops_files:
      - concourse-bosh-deployment/cluster/operations/dev-versions.yml
      - concourse-bosh-deployment/cluster/operations/no-auth.yml
      - concourse-bosh-deployment/cluster/operations/influxdb.yml
      - concourse-bosh-deployment/cluster/operations/blackbox.yml
      - concourse-bosh-deployment/cluster/operations/static-web.yml
      vars:
        deployment_name: concourse-test
        web_ip: 10.244.15.2
        external_url: "http://10.244.15.2:8080"
        network_name: testflight
        web_vm_type: testflight
        db_vm_type: testflight
        worker_vm_type: testflight
        db_persistent_disk_type: small


- name: bosh-upgrade
  serial_groups: [bosh-upgrade]
  plan:
  - aggregate:
    - get: concourse
      trigger: true
      passed: [bosh-test-deploy]
    - get: bosh-rc
      trigger: true
      passed: [bosh-test-deploy]
    - get: version
      trigger: true
      passed: [bosh-test-deploy]
    - get: garden-runc
      trigger: true
      passed: [bosh-test-deploy]
    - get: fly-rc
      trigger: true
      passed: [bosh-test-deploy]
    - get: postgres-release
      trigger: true
      passed: [bosh-test-deploy]
    - get: gcp-stemcell
      trigger: true
      passed: [bosh-test-deploy]
    - get: concourse-bosh-deployment
      trigger: true
      passed: [bosh-test-deploy]
    - get: final-release
  - put: delete-upgrade-deployment
    resource: upgrade-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      delete:
        enabled: true
        force: true
  - put: final-release-deployment
    resource: upgrade-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      stemcells: [gcp-stemcell/*.tgz]
      releases:
      - garden-runc/*.tgz
      - postgres-release/*.tgz
      - bosh-rc/concourse-*.tgz
      ops_files:
      - concourse-bosh-deployment/cluster/operations/dev-versions.yml
      - concourse-bosh-deployment/cluster/operations/no-auth.yml
      - concourse-bosh-deployment/cluster/operations/static-web.yml
      vars:
        deployment_name: concourse-test-upgrade
        web_ip: 10.244.16.2
        external_url: "http://10.244.16.2:8080"
        network_name: testflight
        web_vm_type: testflight
        db_vm_type: testflight
        worker_vm_type: testflight
        db_persistent_disk_type: small
  - task: create-test-pipeline
    file: concourse/ci/create-uber-pipeline.yml
    params:
      WEB_IP: 10.244.16.2
      PIPELINE_NAME: test-pipeline
  - put: bosh-rc-deployment
    resource: upgrade-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      stemcells: [gcp-stemcell/*.tgz]
      releases:
      - garden-runc/*.tgz
      - postgres-release/*.tgz
      - bosh-rc/concourse-*.tgz
      ops_files:
      - concourse-bosh-deployment/cluster/operations/dev-versions.yml
      - concourse-bosh-deployment/cluster/operations/no-auth.yml
      - concourse-bosh-deployment/cluster/operations/static-web.yml
      vars:
        deployment_name: concourse-test-upgrade
        web_ip: 10.244.16.2
        external_url: "http://10.244.16.2:8080"
        network_name: testflight
        web_vm_type: testflight
        db_vm_type: testflight
        worker_vm_type: testflight
        db_persistent_disk_type: small
  - task: verify-test-pipeline
    file: concourse/ci/verify-uber-pipeline.yml
    params:
      WEB_IP: 10.244.16.2
      PIPELINE_NAME: test-pipeline
  - task: testflight
    file: concourse/ci/testflight.yml
    params: {ATC_URL: "http://10.244.16.2:8080"}
    timeout: 1h

- name: bosh-downgrade
  serial_groups: [bosh-downgrade]
  plan:
  - aggregate:
    - get: concourse
      trigger: true
      passed: [bosh-test-deploy]
    - get: bosh-rc
      trigger: true
      passed: [bosh-test-deploy]
    - get: version
      trigger: true
      passed: [bosh-test-deploy]
    - get: garden-runc
      trigger: true
      passed: [bosh-test-deploy]
    - get: fly-rc
      trigger: true
      passed: [bosh-test-deploy]
    - get: postgres-release
      trigger: true
      passed: [bosh-test-deploy]
    - get: concourse-bosh-deployment
      trigger: true
      passed: [bosh-test-deploy]
    - get: gcp-stemcell
      trigger: true
      passed: [bosh-test-deploy]
    - get: final-release
    - get: concourse-bosh-deployment-master
  - put: delete-downgrade-deployment
    resource: downgrade-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      delete:
        enabled: true
        force: true
  - put: bosh-rc-deployment
    resource: downgrade-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      stemcells: [gcp-stemcell/*.tgz]
      releases:
      - garden-runc/*.tgz
      - postgres-release/*.tgz
      - bosh-rc/concourse-*.tgz
      ops_files:
      - concourse-bosh-deployment/cluster/operations/dev-versions.yml
      - concourse-bosh-deployment/cluster/operations/no-auth.yml
      - concourse-bosh-deployment/cluster/operations/static-web.yml
      vars:
        deployment_name: concourse-test-downgrade
        web_ip: 10.244.17.2
        external_url: "http://10.244.17.2:8080"
        network_name: testflight
        web_vm_type: testflight
        db_vm_type: testflight
        worker_vm_type: testflight
        db_persistent_disk_type: small
  - task: create-test-pipeline
    file: concourse/ci/create-uber-pipeline.yml
    params:
      WEB_IP: 10.244.17.2
      PIPELINE_NAME: test-pipeline
  - try:
      put: final-release-deployment
      resource: downgrade-deployment
      params:
        manifest: concourse-bosh-deployment-master/cluster/concourse.yml
        stemcells: [gcp-stemcell/*.tgz]
        releases:
        - garden-runc/*.tgz
        - postgres-release/*.tgz
        - final-release/*.tgz
        ops_files:
        - concourse-bosh-deployment/cluster/operations/dev-versions.yml
        - concourse-bosh-deployment/cluster/operations/no-auth.yml
        - concourse-bosh-deployment/cluster/operations/static-web.yml
        vars:
          deployment_name: concourse-test-downgrade
          web_ip: 10.244.17.2
          external_url: "http://10.244.17.2:8080"
          network_name: testflight
          web_vm_type: testflight
          db_vm_type: testflight
          worker_vm_type: testflight
          db_persistent_disk_type: small
  - task: manual-downgrade
    file: concourse/ci/manual-downgrade.yml
    params:
      BOSH_ENVIRONMENT: bosh.concourse-ci.org
      BOSH_CLIENT: ((bosh_client.id))
      BOSH_CLIENT_SECRET: ((bosh_client.secret))
      BOSH_DEPLOYMENT: concourse-test-downgrade
      BOSH_KEY: ((topgun.bosh_key))
  - task: verify-test-pipeline
    file: concourse/ci/verify-uber-pipeline.yml
    params:
      WEB_IP: 10.244.17.2
      PIPELINE_NAME: test-pipeline
  - task: get-final-release-concourse-repo
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: concourse/atc-ci
      inputs:
        - name: final-release
        - name: concourse
      outputs:
        - name: final-release-concourse
      run:
        path: bash
        args:
        - -c
        - |
          set -x
          version=$(cat final-release/version)
          pushd concourse
          git checkout tags/v${version} && git submodule update --init --recursive
          popd
          cp -r concourse/* final-release-concourse/

  - task: testflight
    file: final-release-concourse/ci/testflight.yml
    input_mapping: {concourse: final-release-concourse}
    params: {ATC_URL: "http://10.244.17.2:8080"}
    timeout: 1h

- name: bosh-testflight
  public: true
  serial_groups: [bosh-testflight]
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-test-deploy]
      trigger: true
    - get: bosh-rc
      passed: [bosh-test-deploy]
      trigger: true
    - get: version
      passed: [bosh-test-deploy]
      trigger: true
    - get: garden-runc
      passed: [bosh-test-deploy]
      trigger: true
    - get: test-deployment
      passed: [bosh-test-deploy]
      trigger: true
    - get: fly-rc
      passed: [bosh-test-deploy]
      trigger: true
    - get: postgres-release
      passed: [bosh-test-deploy]
      trigger: true
    - get: gcp-stemcell
      passed: [bosh-test-deploy]
      trigger: true
    - get: concourse-bosh-deployment
      passed: [bosh-test-deploy]
      trigger: true
  - task: testflight
    file: concourse/ci/testflight.yml
    params: {ATC_URL: "http://10.244.15.2:8080"}
    timeout: 1h

- name: bosh-lengthy-output
  public: true
  serial_groups: [bosh-lengthy-output]
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-test-deploy]
      trigger: true
    - get: test-deployment
      passed: [bosh-test-deploy]
      trigger: true
  - task: lengthy-output
    file: concourse/ci/lengthy-output.yml
    params: {ATC_URL: "http://10.244.15.2:8080"}
    timeout: 1h

- name: bosh-wats
  public: true
  serial_groups: [bosh-wats]
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-test-deploy]
      trigger: true
    - get: test-deployment
      passed: [bosh-test-deploy]
      trigger: true
  - task: wats
    file: concourse/ci/wats.yml
    params: {ATC_URL: "http://10.244.15.2:8080"}
    timeout: 1h

- name: bosh-watsjs
  public: true
  serial_groups: [bosh-watsjs]
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-test-deploy]
      trigger: true
    - get: test-deployment
      passed: [bosh-test-deploy]
      trigger: true
    - get: fly-rc
      passed: [bosh-test-deploy]
      trigger: true
  - task: watsjs
    file: concourse/ci/watsjs.yml
    params: {ATC_URL: "http://10.244.15.2:8080"}
    timeout: 1h

- name: topgun
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-rc]
      trigger: true
    - get: bosh-rc
      passed: [bosh-rc]
      trigger: true
    - get: garden-runc
      passed: [bosh-rc]
      trigger: true
    - get: postgres-release
      passed: [bosh-rc]
      trigger: true
    - get: gcp-stemcell
      passed: [bosh-rc]
      trigger: true
    - get: git-server-release
    - get: vault-release
    - get: credhub-release
    - get: bosh-cli
  - task: topgun
    file: concourse/ci/topgun.yml
    input_mapping:
      concourse-release: bosh-rc
      garden-runc-release: garden-runc
      stemcell: gcp-stemcell
    params:
      BOSH_ENVIRONMENT: bosh.concourse-ci.org
      BOSH_CLIENT: ((bosh_client.id))
      BOSH_CLIENT_SECRET: ((bosh_client.secret))
      BOSH_KEY: ((topgun.bosh_key))
      TOPGUN_NETWORK_OFFSET: 0
      AWS_REGION: ((topgun_aws_ssm.region))
      AWS_ACCESS_KEY_ID: ((topgun_aws_ssm.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((topgun_aws_ssm.secret_access_key))

- name: bosh-deploy
  serial: true
  interruptible: true
  plan:
  - aggregate:
    - get: concourse
      params: {submodules: none}
      passed: [bosh-testflight, bosh-upgrade, bosh-downgrade, bosh-wats, bosh-watsjs, topgun]
      trigger: true
    - get: version
      passed: [bosh-testflight]
      trigger: true
    - get: bosh-rc
      passed: [bosh-testflight]
      trigger: true
    - get: garden-runc-release
      resource: garden-runc
      passed: [bosh-testflight]
      trigger: true
    - get: fly-rc
      passed: [bosh-testflight]
      trigger: true
    - get: postgres-release
      passed: [bosh-testflight]
      trigger: true
    - get: gcp-stemcell
      passed: [bosh-testflight]
      trigger: true
    - get: concourse-bosh-deployment
      passed: [bosh-testflight]
      trigger: true
    - get: windows-worker
    - get: gcp-windows-stemcell
  - put: prod-deployment
    params:
      manifest: concourse-bosh-deployment/cluster/concourse.yml
      stemcells:
      - gcp-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - garden-runc-release/*.tgz
      - postgres-release/*.tgz
      - bosh-rc/concourse-*.tgz
      - windows-worker/*.tgz
      ops_files:
      - concourse-bosh-deployment/cluster/operations/scale.yml
      - concourse-bosh-deployment/cluster/operations/dev-versions.yml
      - concourse-bosh-deployment/cluster/operations/privileged-http.yml
      - concourse-bosh-deployment/cluster/operations/tls.yml
      - concourse-bosh-deployment/cluster/operations/privileged-https.yml
      - concourse-bosh-deployment/cluster/operations/basic-auth.yml
      - concourse-bosh-deployment/cluster/operations/github-auth.yml
      - concourse-bosh-deployment/cluster/operations/encryption.yml
      - concourse-bosh-deployment/cluster/operations/vault-tls-cert-auth.yml
      - concourse-bosh-deployment/cluster/operations/influxdb.yml
      - concourse-bosh-deployment/cluster/operations/blackbox.yml
      - concourse-bosh-deployment/cluster/operations/db-stats.yml
      - concourse-bosh-deployment/cluster/operations/web-network-extension.yml
      - concourse-bosh-deployment/cluster/operations/team-authorized-keys.yml
      - concourse-bosh-deployment/cluster/operations/untrusted-worker.yml
      - concourse-bosh-deployment/cluster/operations/windows-worker.yml
      - concourse-bosh-deployment/cluster/operations/telegraf-postgres.yml
      vars:
        deployment_name: concourse-prod
        web_instances: 2
        worker_instances: 3
        external_url: "https://ci.concourse-ci.org"
        web_vm_type: web
        db_vm_type: database
        worker_vm_type: worker
        untrusted_worker_vm_type: worker
        db_persistent_disk_type: large
        network_name: private
        web_network_name: web
        untrusted_worker_network_name: private
        web_network_vm_extension: concourse-web-target-pool
        untrusted_worker_deny_networks: [10.0.0.0/16]
        untrusted_worker_tags: [pr]
        windows_worker_tsa_host: ci.concourse-ci.org

- name: bin-testflight
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bin-rc]
      trigger: true
    - get: linux-binary
      resource: bin-rc
      passed: [bin-rc]
      trigger: true
    - get: version
      passed: [bin-rc]
      trigger: true
    - get: fly-rc
      passed: [bin-rc]
  - task: testflight
    file: concourse/src/github.com/concourse/bin/ci/testflight.yml
    privileged: true
    timeout: 1h

- name: bin-testflight-qs
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bin-rc]
      trigger: true
    - get: linux-binary
      resource: bin-rc
      passed: [bin-rc]
      trigger: true
    - get: version
      passed: [bin-rc]
      trigger: true
    - get: fly-rc
      passed: [bin-rc]
  - task: testflight
    file: concourse/src/github.com/concourse/bin/ci/testflight.yml
    privileged: true
    timeout: 1h
    params: {QUICKSTART: true}

- name: bin-smoke
  serial: true
  plan:
  - aggregate:
    - get: bin-rc
      passed: [bin-testflight, bin-testflight-qs]
      params: {globs: [concourse_linux_amd64]}
      trigger: true
    - get: concourse
      passed: [bin-testflight, bin-testflight-qs]
      trigger: true
    - get: version
      passed: [bin-testflight, bin-testflight-qs]
      trigger: true
    - get: fly-rc
      passed: [bin-testflight, bin-testflight-qs]
  - task: setup-tugboat
    file: concourse/src/github.com/concourse/bin/ci/smoke-tests/setup-tugboat.yml
    params:
      OS: ubuntu
      USER_NAME: root
      ACCESS_TOKEN: ((digitalocean.access_token))
      SSH_USER: ((digitalocean.ssh_user))
      SSH_KEY: ((digitalocean.ssh_key))
      IMAGE: ubuntu-16-04-x64
      REGION: nyc1
  - task: create-droplet
    file: concourse/src/github.com/concourse/bin/ci/smoke-tests/create-droplet.yml
    params: {OS: ubuntu, USER_NAME: root}
  - ensure:
      task: teardown
      file: concourse/src/github.com/concourse/bin/ci/smoke-tests/teardown-droplet.yml
      params: {OS: ubuntu}
    do:
    - task: install-postgres
      file: concourse/src/github.com/concourse/bin/ci/smoke-tests/install-postgres-xenial.yml
      params: {USER_NAME: root}
    - task: test-bin
      file: concourse/src/github.com/concourse/bin/ci/smoke-tests/smoke-test.yml
      params: {USER_NAME: root}
      timeout: 1h

- name: bin-docker
  serial: true
  public: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bin-rc]
      trigger: true
    - get: concourse-docker
      trigger: true
    - get: dumb-init
      trigger: true
    - get: bin-rc
      passed: [bin-rc]
      params: {globs: [concourse_linux_amd64]}
      trigger: true
    - get: version
      passed: [bin-rc]
      trigger: true
    - get: ubuntu-image
      params: {save: true}
      trigger: true
    - get: fly-rc
      passed: [bin-rc]
  - task: build-root
    file: concourse-docker/ci/build-root.yml
  - put: concourse-image-rc
    params:
      build: concourse-image-build-root
      load_base: ubuntu-image
      tag: version/version
      tag_as_latest: true

- name: bin-docker-testflight
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bin-docker]
      trigger: true
    - get: version
      passed: [bin-docker]
      trigger: true
    - get: bin-rc
      passed: [bin-docker]
      trigger: true
    - get: concourse-docker
      trigger: true
      passed: [bin-docker]
    - get: concourse-image-rc
      passed: [bin-docker]
      trigger: true
      params: {save: true}
    - get: fly-rc
      passed: [bin-docker]
    - get: postgres-image
      params: {save: true}
  - task: testflight
    file: concourse-docker/ci/testflight.yml
    privileged: true
    timeout: 1h

- name: bin-docker-testflight-qs
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bin-docker]
      trigger: true
    - get: version
      passed: [bin-docker]
      trigger: true
    - get: bin-rc
      passed: [bin-docker]
      trigger: true
    - get: concourse-docker
      trigger: true
      passed: [bin-docker]
    - get: concourse-image-rc
      passed: [bin-docker]
      trigger: true
      params: {save: true}
    - get: fly-rc
      passed: [bin-docker]
    - get: postgres-image
      params: {save: true}
  - task: testflight
    file: concourse-docker/ci/testflight.yml
    privileged: true
    params: {DOCKER_COMPOSE_YML: docker-compose-quickstart.yml}
    timeout: 1h

- name: nightly
  plan:
   - get: in-the-middle-of-the-night
     trigger: true
   - get: bosh-rc
     passed: [bosh-deploy]
   - get: concourse
     passed: [bosh-deploy]
   - put: nightly-release
     params: {file: bosh-rc/concourse-*.tgz}
   - put: latest-nightly
     params: {file: concourse/.git/ref}

- name: shipit
  serial_groups: [version]
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-deploy, bin-smoke]
    - get: version
      passed: [bosh-deploy, bin-smoke]
      params: {bump: final}
    - get: garden-runc-release
      passed: [bosh-deploy]
      resource: garden-runc
    - get: postgres-release
      passed: [bosh-deploy]
    - get: bosh-rc
      passed: [bosh-deploy]
    - get: concourse-bosh-deployment
      passed: [bosh-deploy]
    - get: gcp-stemcell
      passed: [bosh-deploy]
    - get: bin-rc
      passed: [bin-smoke, bin-docker-testflight, bin-docker-testflight-qs]
    - get: fly-rc
      passed: [bin-smoke, bin-docker-testflight, bin-docker-testflight-qs, bosh-deploy]
    - get: concourse-image-rc
      passed: [bin-docker-testflight]
    - get: concourse-head
  - task: finalize-release
    file: concourse-head/ci/finalize-release.yml
    params: {BOSH_PRIVATE_CONFIG: ((concourse_release_private_config))}
  - aggregate:
    - put: version
      params: {file: version/version}
    - put: concourse-head
      params:
        repository: final-release-repo
        merge: true
    - put: final-release
      params: {file: final-release-tarball/concourse-*.tgz}

- name: bump-concourse-bosh-deployment
  serial: true
  plan:
  - aggregate:
    - get: concourse-bosh-deployment
      # passed: [shipit]
    - get: concourse-boshio
      trigger: true
    - get: garden-runc
      passed: [shipit]
    - get: postgres-release
      passed: [shipit]
  - task: bump-versions
    file: concourse-bosh-deployment/ci/bump-versions.yml
  - aggregate:
    - put: concourse-bosh-deployment
      params:
        repository: bumped-repo
        merge: true
    - put: concourse-bosh-deployment-master
      params:
        repository: bumped-repo
        merge: true

- name: push-docs
  serial: true
  plan:
  - aggregate:
    - get: docs
    - get: version
      trigger: true
      passed: [github-release]
  - task: build-docs
    file: docs/ci/build.yml
    params: {ANALYTICS_ID: ((analytics_id))}
  - put: concourse-docs
    params:
      current_app_name: docs
      manifest: built-docs/manifest.yml

- name: github-release
  plan:
  - aggregate:
    - get: final-release
      passed: [shipit]
      trigger: true
    - get: garden-runc
      passed: [shipit]
      trigger: true
    - get: fly-rc
      passed: [shipit]
      trigger: true
    - get: bin-rc
      passed: [shipit]
      trigger: true
    - get: concourse
      params: {submodules: none}
      passed: [shipit]
      trigger: true
    - get: concourse-head
      params: {submodules: none}
      passed: [shipit]
      trigger: true
    - get: version
      passed: [shipit]
      trigger: true
    - get: gcp-stemcell
      passed: [shipit]
    - get: bosh-virtualbox-cpi
    - get: concourse-bosh-deployment
    - get: postgres-release
  - aggregate:
    - task: build-release-notes
      file: concourse/ci/build-release-notes.yml
    - task: rename-release
      file: concourse/ci/rename-release.yml
    - task: generate-commitish
      config:
        platform: linux

        image_resource:
          type: docker-image
          source: {repository: concourse/git-resource}

        inputs:
        - name: concourse-head
        - name: version

        outputs:
        - name: generated-commitish

        run:
          path: sh
          args:
          - -c
          - |
            git -C concourse-head rev-parse v$(cat version/version) > generated-commitish/commitish
  - put: github-release
    params:
      name: release-notes/release-name
      tag: release-notes/release-name
      body: release-notes/notes.md
      commitish: generated-commitish/commitish
      globs:
      - bin-rc/concourse_*
      - fly-rc/fly_*

- name: promote-docker
  serial: true
  public: true
  plan:
  - aggregate:
    - get: concourse-image-rc
      passed: [shipit]
      params: {save: true}
      trigger: true
    - get: version
      passed: [shipit]
      trigger: true
  - put: concourse-image-final
    params:
      load: concourse-image-rc
      tag: version/version
      tag_as_latest: true

- name: install-go-windows
  plan:
  - aggregate:
    - get: concourse
    - get: golang-windows
  - task: install-go
    file: concourse/ci/install-go-windows.yml
  - task: install-git
    file: concourse/ci/install-git-windows.yml

- name: bump-btrfs
  serial: true
  public: true
  plan:
  - get: concourse
  - task: build
    file: concourse/ci/build-btrfs-tools.yml
  - task: bump-blob
    input_mapping:
      blob-dir: btrfs-tools
    file: concourse/ci/bump-blob.yml
    params:
      BLOB_NAME: btrfs-tools
      BLOB_VERSION: 4.4
      BLOB_DESTINATION: btrfs
      BOSH_PRIVATE_CONFIG: ((concourse_release_private_config))
  - put: concourse-head
    params: {repository: bumped-concourse, rebase: true}

- name: bump-golang
  serial: true
  public: true
  plan:
  - aggregate:
    - get: golang-linux
      trigger: true
    - get: concourse
  - task: bump-blob

    input_mapping:
      blob-dir: golang-linux
    file: concourse/ci/bump-blob.yml
    params:
      BLOB_NAME: golang-linux-amd64
      BLOB_VERSION_FILE: version
      BLOB_DESTINATION: golang
      BOSH_PRIVATE_CONFIG: ((concourse_release_private_config))
  - put: concourse-head
    params: {repository: bumped-concourse, rebase: true}

resources:
- name: version
  type: semver
  source:
    bucket: concourse-releases
    key: current-version
    access_key_id: ((concourse_release_bucket.access_key))
    secret_access_key: ((concourse_release_bucket.secret_key))

- name: final-release
  type: s3
  source:
    bucket: concourse-releases
    regexp: concourse-(.*).tgz
    access_key_id: ((concourse_release_bucket.access_key))
    secret_access_key: ((concourse_release_bucket.secret_key))

- name: bosh-rc
  type: s3
  source:
    bucket: concourse-release-candidates
    regexp: concourse-(.*).tgz
    access_key_id: ((concourse_release_bucket.access_key))
    secret_access_key: ((concourse_release_bucket.secret_key))

- name: nightly-release
  type: s3
  source:
    bucket: concourse-nightly-releases
    regexp: concourse-(.*).tgz
    region_name: us-west-2
    access_key_id: ((concourse_release_bucket.access_key))
    secret_access_key: ((concourse_release_bucket.secret_key))

- name: latest-nightly
  type: s3
  source:
    bucket: concourse-nightly-releases
    versioned_file: latest-nightly/ref
    region_name: us-west-2
    access_key_id: ((concourse_release_bucket.access_key))
    secret_access_key: ((concourse_release_bucket.secret_key))

- name: in-the-middle-of-the-night
  type: time
  source:
    start: 12:00 AM
    stop: 1:00 AM

- name: prod-deployment
  type: bosh-deployment
  source:
    target: ((bosh_target))
    deployment: concourse-prod
    client: ((bosh_client.id))
    client_secret: ((bosh_client.secret))

- name: upgrade-deployment
  type: bosh-deployment
  source:
    target: ((bosh_target))
    deployment: concourse-test-upgrade
    client: ((bosh_client.id))
    client_secret: ((bosh_client.secret))

- name: downgrade-deployment
  type: bosh-deployment
  source:
    target: ((bosh_target))
    deployment: concourse-test-downgrade
    client: ((bosh_client.id))
    client_secret: ((bosh_client.secret))

- name: test-deployment
  type: bosh-deployment
  source:
    target: ((bosh_target))
    deployment: concourse-test
    client: ((bosh_client.id))
    client_secret: ((bosh_client.secret))

- name: concourse-boshio
  type: bosh-io-release
  source:
    repository: concourse/concourse

- name: garden-runc
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: postgres-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/postgres-release

- name: bosh-virtualbox-cpi
  type: bosh-io-release
  source:
    repository: cppforlife/bosh-virtualbox-cpi-release

- name: vault-release
  type: github-release
  source:
    owner: vito
    repository: vault-boshrelease
    access_token: ((concourse_github_dummy.access_token))

- name: credhub-release
  type: bosh-io-release
  source:
    repository: pivotal-cf/credhub-release

- name: fly-rc
  type: github-release
  source:
    owner: concourse
    repository: fly
    release: false
    pre_release: true
    access_token: ((concourse_github_release.access_token))

- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: gcp-windows-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-windows2012R2-go_agent

- name: windows-worker
  type: bosh-io-release
  source:
    repository: pivotal-cf-experimental/concourse-windows-worker-release

- name: docs
  type: git
  source:
    uri: https://github.com/concourse/docs
    branch: master

- name: concourse-docs
  type: cf
  source:
    api: ((docs_cf.target))
    username: ((docs_cf.username))
    password: ((docs_cf.password))
    organization: ((docs_cf.organization))
    space: ((docs_cf.space))

- name: github-release
  type: github-release
  source:
    owner: concourse
    repository: concourse
    access_token: ((concourse_github_release.access_token))

- name: concourse
  type: git
  source:
    uri: https://github.com/concourse/concourse.git
    branch: master

- name: concourse-head
  type: git
  source:
    uri: git@github.com:concourse/concourse.git
    branch: master
    private_key: ((concourse_repo_private_key))

- name: garden-runc-src
  type: git
  source:
    uri: https://github.com/cloudfoundry/garden-runc-release
    branch: master

- name: concourse-bosh-deployment
  type: git
  source:
    uri: git@github.com:concourse/concourse-bosh-deployment.git
    branch: develop
    private_key: ((concourse_deployment_repo_private_key))

- name: concourse-bosh-deployment-master
  type: git
  source:
    uri: git@github.com:concourse/concourse-bosh-deployment.git
    branch: master
    private_key: ((concourse_deployment_repo_private_key))

- name: bin-rc
  type: github-release
  source:
    owner: concourse
    repository: bin
    access_token: ((bin_github_release.access_token))

- name: git-server-release
  type: github-release
  source:
    owner: cloudfoundry-community
    repository: git-server-release
    access_token: ((git_server_release.access_token))

- name: concourse-docker
  type: git
  source:
    uri: https://github.com/concourse/concourse-docker

- name: dumb-init
  type: github-release
  source:
    user: Yelp
    repository: dumb-init
    access_token: ((concourse_github_dummy.access_token))

- name: ubuntu-image
  type: docker-image
  source:
    repository: ubuntu
    tag: '16.04'

- name: postgres-image
  type: docker-image
  source:
    repository: postgres
    tag: latest

- name: concourse-image-rc
  type: docker-image
  source:
    repository: concourse/concourse-rc
    username: ((docker.username))
    password: ((docker.password))

- name: concourse-image-final
  type: docker-image
  source:
    repository: concourse/concourse
    username: ((docker.username))
    password: ((docker.password))

- name: golang-windows
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(\d+\.\d+(\.\d+)?)\.windows-amd64\.msi'

- name: bosh-cli
  type: s3
  source:
    bucket: bosh-cli-artifacts
    regexp: bosh-cli-([^-]+)-linux-amd64

- name: golang-linux
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(1\.\d+(\.\d+)?)\.linux-amd64\.tar.gz'

resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource
