<%
  resources ||= ""
  resources = resources.split(',')
  ship ||= "true"
  ship = ship == "true"
%>
---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: alpine-edge
  type: docker-image
  source:
    repository: alpine
    tag: edge

- name: resource-repo
  type: git
  source:
    uri: https://github.com/concourse/((resource))-resource

- name: resource-pr
  type: pull-request
  source:
    repo: concourse/((resource))-resource
    base: master
    access_token: ((pull_requests_access_token))

- name: resource-image
  type: docker-image
  source:
    repository: concourse/((resource))-resource
    username: ((docker.username))
    password: ((docker.password))

<% if ship %>
- name: concourse
  type: git
  source:
    uri: git@github.com:concourse/concourse.git
    branch: master
    private_key: ((concourse_repo_private_key))
<% end %>

<% if resources.include?('fly') %>
- name: fly
  type: github-release
  check_every: 1h
  source:
    user: concourse
    repository: concourse
    access_token: ((concourse_github_dummy.access_token))
<% end %>

<% if resources.include?('cf-cli') %>
- name: cf-cli
  type: s3
  source:
    bucket: cf-cli-releases
    region_name: us-west-1
    regexp: releases/v([\d\.]+)/cf-cli_.*_linux_x86-64.tgz
<% end %>

jobs:
- name: build
  plan:
  - get: resource-repo
    trigger: true
  - get: alpine-edge
    params: {save: true}
    trigger: true
<% resources.each do |resource_name| %>
  - get: <%= resource_name %>
    trigger: true
    params:
      globs: [ "<%= resource_name %>*linux*" ]
<% end %>
  - put: resource-image
    params:
      load_base: alpine-edge
      build: resource-repo

- name: prs
  serial: true
  public: true
  plan:
  - get: resource-pr
    trigger: true
    version: every
  - get: alpine-edge
    params: {save: true}
    trigger: true
<% resources.each do |resource_name| %>
  - get: <%= resource_name %>
    trigger: true
    params:
      globs: [ "<%= resource_name %>*linux*" ]
<% end %>
  - put: resource-pr-merged
    resource: resource-pr
    params:
      path: resource-pr
      status: pending
    get_params: {fetch_merge: true}
  - put: resource-image
    params:
      load_base: alpine-edge
      build: resource-pr-merged
      tag: resource-pr/.git/id
      tag_prefix: pr-
    on_failure:
      put: resource-pr
      params:
        path: resource-pr
        status: failure
    on_success:
      put: resource-pr
      params:
        path: resource-pr
        status: success

<% if ship %>
- name: ship
  plan:
  - get: resource-repo
    passed: [build]
    trigger: true
  - get: resource-image
    passed: [build]
    params: {rootfs: true}
    trigger: true
  - get: concourse
    params: {submodules: none}
  - task: bump-package
    file: concourse/ci/bump-resource-package.yml
    params:
      RESOURCE_NAME: ((resource))-resource
      BOSH_PRIVATE_CONFIG: ((concourse_release_private_config))
  - put: concourse
    params: {repository: bumped-concourse, rebase: true}
    get_params: {submodules: none}
<% end %>
